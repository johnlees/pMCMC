#!/usr/bin/perl -w

#******************************************************************#
#* Required modules                                               *#
#******************************************************************#
use 5.006_001;
use strict;
use English qw( -no_match_vars );

use Getopt::Long;

my $cores = 1;
my %Accepts;

my $optres = GetOptions ("cores=i" => \$cores);

open(PROCS, "/media/Shared/Documents/MCMC/svn/parallel_mcmc/Perl_code/processors.txt") || die("Failed to find processors.txt");

while (my $linein = <PROCS>)
{
	chomp($linein);
	my ($Processor, $AcceptProb, $Variance) = split(/\s+/, $linein);
	$Accepts{$Processor} = $AcceptProb;
}

my $depth = 1;

for (my $i = 1; $i<$cores; $i++) {
	$depth += (1-$Accepts{$cores})**$i;
}

print("$depth");

#my @AcceptProbs;
#my @ProcArray;

#open(PROCS, "processors.txt") || die("Failed to find processors.txt");
#
#while (my $linein = <PROCS>)
#{
#	chomp($linein);
#	my ($Processor, $AcceptProb, $Variance) = split(/\s+/, $linein);
#	push(@ProcArray, $Processor);
#	push(@AcceptProbs, $AcceptProb);
#}

#for (my $j = 0; $j < scalar(@ProcArray); $j++) {
#	my $depth = 1;
#
#	for (my $i = 1; $i<$ProcArray[$j]; $i++) {
#		$depth += (1-$AcceptProbs[$j])**$i;
#	}
#	
#	print("Proc=$ProcArray[$j] depth=$depth\n");
#}

